{
	"name": "Data Aggregation and Parameterization",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_NYC_Payroll_Data_2020_db",
						"type": "DatasetReference"
					},
					"name": "payroll2020data"
				},
				{
					"dataset": {
						"referenceName": "ds_NYC_Payroll_Data_2021_db",
						"type": "DatasetReference"
					},
					"name": "payroll2021data"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_NYC_Payroll_Summary_db",
						"type": "DatasetReference"
					},
					"name": "payrollsummarydb"
				},
				{
					"dataset": {
						"referenceName": "ds_NYC_Payroll_Summary_synapse",
						"type": "DatasetReference"
					},
					"name": "payrollsummarysynapse"
				}
			],
			"transformations": [
				{
					"name": "union"
				},
				{
					"name": "filter"
				},
				{
					"name": "TotalPaidDerivedColumn"
				},
				{
					"name": "aggregate"
				}
			],
			"scriptLines": [
				"parameters{",
				"     dataflow_param_fiscalyear as integer (2020)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> payroll2020data",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> payroll2021data",
				"payroll2020data, payroll2021data union(byName: true)~> union",
				"union filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> filter",
				"filter derive(TotalPaid = RegularGrossPaid + TotalOTPaid + TotalOtherPay) ~> TotalPaidDerivedColumn",
				"TotalPaidDerivedColumn aggregate(groupBy(AgencyName,",
				"          FiscalYear),",
				"     TotalPaid = sum(TotalPaid)) ~> aggregate",
				"aggregate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          AgencyName as string,",
				"          TotalPaid as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> payrollsummarydb",
				"aggregate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as string,",
				"          AgencyName as string,",
				"          TotalPaid as string",
				"     ),",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> payrollsummarysynapse"
			]
		}
	}
}